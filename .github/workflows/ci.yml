name: Build and Test PromptCache

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment (for DVC and other pre-build tools)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install DVC and pull data artifacts
      - name: Install and Run DVC
        run: |
          pip install dvc
          echo "📦 Pulling data with DVC..."
          dvc pull

      # Step 4: Build and start all services with Docker Compose
      - name: Build and run services
        run: |
          echo "🚀 Starting services with Docker Compose..."
          docker compose up -d --build

      # Step 5: Wait for services to become healthy
      - name: Wait for services and perform health checks
        run: |
          echo "🩺 Waiting for services to become healthy..."

          timeout=60

          # ---- Backend Health Check ----
          while ! curl -fsS http://localhost:8000/docs > /dev/null 2>&1; do
            sleep 5
            timeout=$((timeout - 5))
            if [ $timeout -le 0 ]; then
              echo "❌ Error: Backend service did not become healthy in time."
              docker compose logs backend
              exit 1
            fi
            echo "⏳ Backend not ready yet, retrying in 5s..."
          done
          echo "✅ Backend is healthy!"

          # ---- Frontend Health Check ----
          timeout=60
          while ! curl -fsS http://localhost:8501 > /dev/null 2>&1; do
            sleep 5
            timeout=$((timeout - 5))
            if [ $timeout -le 0 ]; then
              echo "❌ Error: Frontend service did not become healthy in time."
              docker compose logs frontend
              exit 1
            fi
            echo "⏳ Frontend not ready yet, retrying in 5s..."
          done
          echo "✅ Frontend is healthy!"

      # Step 6: (Optional) Print logs for debugging after checks
      - name: Print container logs
        if: always()
        run: |
          echo "📜 Backend Logs:"
          docker compose logs backend | tail -n 30
          echo "📜 Frontend Logs:"
          docker compose logs frontend | tail -n 30
